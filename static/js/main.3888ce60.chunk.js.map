{"version":3,"sources":["components/TaskItem.tsx","components/TaskList.tsx","components/TaskInput.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["TaskTtem","task","handleDone","handleDelete","className","done","type","onClick","defaultChecked","title","TaskList","tasks","setTasks","prev","map","t","id","filter","length","TaskInput","useState","inputTile","setInputTitle","count","setCount","value","onChange","event","target","placeholder","initialState","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qOA2BeA,EAlBmB,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,KAAMC,EAA+B,EAA/BA,WAAYC,EAAmB,EAAnBA,aACrD,OACE,qBAAIC,UAAWH,EAAKI,KAAO,OAAS,GAApC,UACE,kCACE,uBAAOC,KAAK,WACVF,UAAU,iBACVG,QAAS,kBAAML,EAAWD,IAC1BO,eAAgBP,EAAKI,OAEvB,sBAAMD,UAAU,iBAAhB,SAAkCH,EAAKQ,WAEzC,wBACEF,QAAS,kBAAMJ,EAAaF,IAC5BG,UAAU,gBAFZ,8BCwBSM,EAnCmB,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAEpCV,EAAa,SAACD,GAClBW,GAAS,SAAAC,GAAI,OAAIA,EAAKC,KAAI,SAAAC,GAAC,OACzBA,EAAEC,KAAOf,EAAKe,GAAd,2BACSf,GADT,IACeI,MAAOJ,EAAKI,OACvBU,SAIFZ,EAAe,SAACF,GACpBW,GAAS,SAAAC,GAAI,OAAIA,EAAKI,QAAO,SAAAF,GAAC,OAC5BA,EAAEC,KAAOf,EAAKe,UAIlB,OACE,qBAAKZ,UAAU,QAAf,SAEIO,EAAMO,QAAU,EAAI,gFAClB,oBAAId,UAAU,YAAd,SACGO,EAAMG,KAAI,SAAAb,GAAI,OACb,cAAC,EAAD,CAEEA,KAAMA,EACNC,WAAYA,EACZC,aAAcA,GAHTF,EAAKe,Y,OCaXG,EArCoB,SAAC,GAAyB,IAAvBR,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAAe,EACvBQ,mBAAS,IADc,mBACnDC,EADmD,KACxCC,EADwC,OAEhCF,mBAAST,EAAMO,OAAS,GAFQ,mBAEnDK,EAFmD,KAE5CC,EAF4C,KAqB1D,OACE,qBAAKpB,UAAU,aAAf,SACE,sBAAKA,UAAU,QAAf,UACE,uBACEE,KAAK,OACLF,UAAU,QACVqB,MAAOJ,EACPK,SAxBkB,SAACC,GACzBL,EAAcK,EAAMC,OAAOH,QAwBrBI,YAAY,qEAEd,wBAAQtB,QAvBO,WACnBiB,EAASD,EAAQ,GAQjBX,EAAS,CANa,CACpBI,GAAIO,EACJd,MAAOY,EACPhB,MAAM,IAGA,mBAAcM,KACtBW,EAAc,KAaqBlB,UAAU,iBAAzC,gCCjCF0B,G,MAAuB,CAC3B,CACEd,GAAI,EACJP,MAAO,mBACPJ,MAAM,GACL,CACDW,GAAI,EACJP,MAAO,yBACPJ,MAAM,KAeK0B,EAXO,WAAO,IAAD,EACAX,mBAASU,GADT,mBACnBnB,EADmB,KACZC,EADY,KAG1B,OACE,gCACE,cAAC,EAAD,CAAWD,MAAOA,EAAOC,SAAUA,IACnC,cAAC,EAAD,CAAUD,MAAOA,EAAOC,SAAUA,QCVzBoB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3888ce60.chunk.js","sourcesContent":["import React from 'react';\nimport { Task } from '../Types';\n\ntype Props = {\n  task: Task\n  handleDone: (task: Task) => void\n  handleDelete: (task: Task) => void\n}\n\nconst TaskTtem: React.FC<Props> = ({ task, handleDone, handleDelete }) => {\n  return (\n    <li className={task.done ? 'done' : ''}>\n      <label>\n        <input type=\"checkbox\"\n          className=\"checkbox-input\"\n          onClick={() => handleDone(task)}\n          defaultChecked={task.done}\n        />\n        <span className=\"checkbox-label\">{task.title}</span>\n      </label>\n      <button\n        onClick={() => handleDelete(task)}\n        className=\"btn is-delete\">削除</button>\n    </li>\n  );\n}\n\nexport default TaskTtem;\n","import React from 'react';\nimport TaskTtem from './TaskItem'\nimport { Task } from '../Types';\n\ntype Props = {\n  tasks: Task[]\n  setTasks: React.Dispatch<React.SetStateAction<Task[]>>\n}\n\nconst TaskList: React.FC<Props> = ({ tasks, setTasks }) => {\n\n  const handleDone = (task: Task) => {\n    setTasks(prev => prev.map(t =>\n      t.id === task.id\n        ? { ...task, done: !task.done }\n        : t\n    ))\n  }\n\n  const handleDelete = (task: Task) => {\n    setTasks(prev => prev.filter(t =>\n      t.id !== task.id\n    ))\n  }\n\n  return (\n    <div className=\"inner\">\n      {\n        tasks.length <= 0 ? '登録されたTODOはありません。 ' :\n          <ul className=\"task-list\">\n            {tasks.map(task => (\n              <TaskTtem\n                key={task.id}\n                task={task}\n                handleDone={handleDone}\n                handleDelete={handleDelete}\n              />\n            ))}\n          </ul>\n      }\n    </div>\n  );\n}\n\nexport default TaskList;\n","import React, { useState } from 'react';\nimport { Task } from '../Types';\n\ntype Props = {\n  tasks: Task[]\n  setTasks: React.Dispatch<React.SetStateAction<Task[]>>\n}\n\nconst TaskInput: React.FC<Props> = ({ tasks, setTasks }) => {\n  const [inputTile, setInputTitle] = useState('')\n  const [count, setCount] = useState(tasks.length + 1)\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setInputTitle(event.target.value)\n  }\n\n  const handleSubmit = () => {\n    setCount(count + 1)\n\n    const newTask: Task = {\n      id: count,\n      title: inputTile,\n      done: false\n    }\n\n    setTasks([newTask, ...tasks])\n    setInputTitle('')\n  }\n\n  return (\n    <div className=\"input-form\">\n      <div className=\"inner\">\n        <input\n          type=\"text\"\n          className=\"input\"\n          value={inputTile}\n          onChange={handleInputChange}\n          placeholder=\"TODOを入力してください。\"\n        />\n        <button onClick={handleSubmit} className=\"btn is-primary\">追加</button>\n      </div>\n    </div>\n  );\n}\n\nexport default TaskInput;\n","import React, { useState } from 'react';\nimport TaskList from \"./components/TaskList\"\nimport TaskInput from \"./components/TaskInput\"\nimport { Task } from \"./Types\"\nimport './App.css';\n\nconst initialState: Task[] = [\n  {\n    id: 2,\n    title: '次のTodo',\n    done: false\n  }, {\n    id: 1,\n    title: '最初のTodo',\n    done: true\n  }\n]\n\nconst App: React.FC = () => {\n  const [tasks, setTasks] = useState(initialState)\n\n  return (\n    <div>\n      <TaskInput tasks={tasks} setTasks={setTasks} />\n      <TaskList tasks={tasks} setTasks={setTasks} />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}